
================================================================================================================================================

Python字典的pop()方法（删除字典给定键 key 所对应的值，返回值为被删除的值）

#!/usr/bin/python
# -*- coding: UTF-8 -*-
site= {'name': '我的博客地址', 'alexa': 10000, 'url':'http://blog.csdn.net/uuihoo/'}
pop_obj=site.pop('name') # 删除要删除的键值对，如{'name':'我的博客地址'}这个键值对
print pop_obj   # 输出 ：我的博客地址

================================================================================================================================================

defaultdict()和dict()两者的比较

from collections import defaultdict
a=dict()
b=defaultdict(int)
执行：
print(b["a"])
>>>0如果把上面b的定义更改一下
b=defaultdict(list)
执行：
print(b["a"])
>>>[]
执行：
print(a["a"])
>>>KeyError,"a"

defaultdict()在dict()的基础上添加了一个missing(key)的方法，在调用一个不存在的key的时候，defaultdict函数会调用“missing”，返回一个int,set,list,dict对应的默认数值，不会出现keyerror的情况。

================================================================================================================================================

shutil模块


copy()

功能：复制文件
格式：shutil.copy('来源文件','目标地址')
返回值：复制之后的路径

copy2()

功能：复制文件，保留元数据
格式：shutil.copy2('来源文件','目标地址')
返回值：复制之后的路径

copyfileobj()

将一个文件的内容拷贝的另外一个文件当中
格式：shutil.copyfileobj(open(来源文件,'r'),open（'目标文件','w'）)
返回值：无

copyfile()

功能：将一个文件的内容拷贝的另外一个文件当中
格式:shutil.copyfile(来源文件,目标文件)
返回值：目标文件的路径

copytree()

功能：复制整个文件目录
格式:shutil.copytree(来源目录,目标目录)
返回值：目标目录的路径
注意：无论文件夹是否为空，均可以复制，而且会复制文件夹中的所有内容

rmtree()

功能：移除整个目录，无论是否空
格式：shutil.rmtree(目录路径)
返回值：无

move()

功能：移动文件或者文件夹
格式：shutil.move(来源地址,目标地址)
返回值：目标地址

which()

功能：检测命令对应的文件路径
格式：shutil.which(‘命令字符串’)
返回值：命令文件所在位置
注意：window和linux不太一样。 window的命令都是.exe结尾，linux则不是

================================================================================================================================================

*args 用来将参数打包成tuple给函数体调用
**kwargs 打包关键字参数成dict给函数体调用

================================================================================================================================================

str, endswith

================================================================================================================================================


































